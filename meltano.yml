version: 1
send_anonymous_usage_stats: false
default_environment: dev
project_id: tap-suiteql
plugins:
  extractors:
  - name: tap-suiteql
    namespace: tap_suiteql
    pip_url: -e .
    capabilities:
    - properties
    - state
    - catalog
    - discover
    settings:
    - name: account_id
      env: TAP_SUITEQL_ACCOUNT_ID
    - name: consumer_key
      env: TAP_SUITEQL_CONSUMER_KEY
    - name: consumer_secret
      env: TAP_SUITEQL_CONSUMER_SECRET
    - name: token_id
      env: TAP_SUITEQL_TOKEN_ID
    - name: token_secret
      env: TAP_SUITEQL_TOKEN_SECRET
    - name: base_url
      env: TAP_SUITEQL_BASE_URL
    - name: start_date
      env: TAP_SUITEQL_START_DATE
    config:
      stream_maps:
    #     account:
    #       id: int(id)
    #       # _fivetran_deleted: "true if _sdc_deleted_at is not null else false"
    #       # __alias__: account
    #       # hash_id: md5(str(id))
    #       # __key_properties__: ["hash_id"]
    #     accounthierarchylevels:
    #       id: int(id)
    #     accountingbook:
    #       id: int(id)
    #     accountingperiod:
    #       accountingperiod: int(accountingperiod)
    #     accountingperiodfiscalcalendars:
    #       id: int(id)
    #     accounttype:
    #       internalid: int(internalid)
    #     automationsystems:
    #       id: int(id)
    #     classification:
    #       id: int(id)
    #     consolidatedexchangerate:
    #       id: int(id)
    #     contractitems:
    #       id: int(id)
    #     contracts:
    #       id: int(id)
    #     contractstatus:
    #       id: int(id)
    #     currency:
    #       id: int(id)
    #     customers:
    #       id: int(id)
    #     department:
    #       id: int(id)
    #     employees:
    #       id: int(id)
    #     entity:
    #       id: int(id)
    #     entityaddress:
    #       nkey: int(nkey)
    #       recordowner: int(recordowner)
    #     item:
    #       id: int(id)
    #     journalentries:
    #       id: int(id)
    #     location:
    #       id: int(id)
    #     locationmainaddress:
    #       nkey: int(nkey)
    #       recordowner: int(recordowner)
    #     productids:
    #       id: int(id)
    #     productstanding:
    #       id: int(id)
    #     productstatus:
    #       id: int(id)
    #     psms:
    #       id: int(id)
    #     subsidiary:
    #       id: int(id)
    #     transaction_lines:
    #       uniquekey: int(uniquekey)
        transaction:
          id: int(id)
        transactionaccountingline:
          account: int(account)
          accountingbook: int(accountingbook)
          amount: float(amount)
          amountlinked: float(amountlinked)
          amountpaid: float(amountpaid)
          amountunpaid: float(amountunpaid)
          credit: float(credit)
          debit: float(debit)
          exchangerate: float(exchangerate)
          glauditnumbersequence: int(glauditnumbersequence)
          glauditnumbersetby: int(glauditnumbersetby)
          netamount: float(netamount)
          paymentamountunused: float(paymentamountunused)
          paymentamountused: float(paymentamountused)
          transaction: int(transaction)
          transactionline: int(transactionline)
        transactionline:
          id: int(id)
          netamount: float(netamount)
          uniquekey: int(uniquekey)
          subsidiary: int(subsidiary)
          transaction: int(transaction)
    #     vendor_types:
    #       id: int(id)
    #     vendorcategory:
    #       id: int(id)
    #     vendors:
    #       id: int(id)
    # metadata:
    #   account:
    #     replication-method: FULL_TABLE
    #     replication-key: id
    #   customer:
    #     replication-method: INCREMENTAL
    #   "*":
    #     replication-method: INCREMENTAL
    #   "*_full":
    #     replication-method: FULL_TABLE

  loaders:
  - name: target-jsonl
    variant: andyh1203
    pip_url: target-jsonl
  - name: target-postgres
    variant: meltanolabs
    pip_url: git+https://github.com/MeltanoLabs/target-postgres.git



##################################
#                                #
#       Mappers                  #
#                                #
##################################
  mappers:
  - name: meltano-map-transformer
    pip_url: "git+https://github.com/MeltanoLabs/meltano-map-transform.git"
    executable: meltano-map-transform
    settings:
    - name: stream_maps
      kind: object
    mappings:
    - name: hash_email
      config:
        stream_maps:
          customers:
            id: id
            email:      # drop the PII field from RECORD and SCHEMA messages
            email_domain: email.split('@')[-1]
            email_hash: md5(config['hash_seed'] + email)
            __else__: null
        stream_map_config:
          hash_seed: 01AWZh7A6DzGm6iJZZ2T
    - name: whitelist
      config:
        stream_maps:
          # Whitelist `id` and `description` fields, drop all others
          customers:
            id: id
            description: last_name
            __else__: __NULL__
            __alias__: customers_v2
    - name: add_timestamp
      config:
        stream_maps:
          customers:
            mapping_time: datetime.date.today()
            __alias__: customers_v3
    - name: add_str
      config:
        stream_maps:
          customers:
            client_id: "\"client_123\""
            id: int(id)
            __alias__: customers_v4
            hash_id: md5(str(id))
            __key_properties__: ["hash_id"]
    - name: lower
      config:
        stream_maps:
          customers:
            __alias__: customers_v5
            first_name: first_name.lower() # three different ways of accessing the variable
            last_name: record['last_name'].lower()
            email:  _['email'].upper()
            count_t: str(last_name.count("t")) # need to cast to str because it could be NULL!
            ip_address: __NULL__
    - name: find
      config:
        stream_maps:
          customers:
            __alias__: customers_v6
            first_name: "'found_book' if last_name == 'Book' else 'no_book'"
            id: id
            __else__: __NULL__
    - name: mask
      config:
        stream_maps:
          customers:
            __alias__: customers_v7
            last_name: "config[last_name] if last_name in config else 'no-mask-found'"
            first_name: first_name
            id: id
            __else__: __NULL__
        stream_map_config:
          Book: mask-1
          Tire: mask-2
          Dorian: mask-1
          Suddock: mask-1
          Daws: mask-3
          Maddison: mask-2
          Biernat: mask-4
          Wisden: mask-4
          Loyndon: Mask-2

environments:
  - name: dev
  - name: staging
  - name: prod
