version: 1
send_anonymous_usage_stats: false
default_environment: dev
project_id: tap-suiteq
plugins:
  extractors:
  - name: tap-suiteql
    namespace: tap_suiteql
    pip_url: -e .
    capabilities:
    - properties
    - state
    - catalog
    - discover
    settings:
    - name: account_id
      env: TAP_SUITEQL_ACCOUNT_ID
    - name: consumer_key
      env: TAP_SUITEQL_CONSUMER_KEY
    - name: consumer_secret
      env: TAP_SUITEQL_CONSUMER_SECRET
    - name: token_id
      env: TAP_SUITEQL_TOKEN_ID
    - name: token_secret
      env: TAP_SUITEQL_TOKEN_SECRET
    - name: base_url
      env: TAP_SUITEQL_BASE_URL
    - name: start_date
      env: TAP_SUITEQL_START_DATE
    select:
      - account.*
      - "!trans*.*_url"
    metadata:
      account:
        replication-method: FULL_TABLE
        replication-key: id
      customer:
        replication-method: INCREMENTAL
      "*":
        replication-method: INCREMENTAL
      "*_full":
        replication-method: FULL_TABLE

  loaders:
  - name: target-jsonl
    variant: andyh1203
    pip_url: target-jsonl
  - name: target-postgres
    variant: meltanolabs
    pip_url: git+https://github.com/MeltanoLabs/target-postgres.git
    settings:
    - name: add_record_metadata
      env: TARGET_POSTGRES_ADD_RECORD_METADATA
    - name: database
      env: TARGET_POSTGRES_DATABASE
    - name: default_target_schema
      env: TARGET_POSTGRES_DEFAULT_TARGET_SCHEMA
    - name: dialect+driver
      env: TARGET_POSTGRES_DIALECT_DRIVER
    - name: flattening_enabled
      env: TARGET_POSTGRES_FLATTENING_ENABLED
    - name: flattening_max_depth
      env: TARGET_POSTGRES_FLATTENING_MAX_DEPTH
    - name: hard_delete
      env: TARGET_POSTGRES_HARD_DELETE
    - name: host
      env: TARGET_POSTGRES_HOST
    - name: user
      env: TARGET_POSTGRES_USER
    - name: password
      env: TARGET_POSTGRES_PASSWORD
    - name: port
      env: TARGET_POSTGRES_PORT
    - name: stream_map_config
      env: TARGET_POSTGRES_STREAM_MAP_CONFIG
    - name: stream_maps
      env: TARGET_POSTGRES_STREAM_MAPS
    config:
      stream_maps:
        account:
          id: int(id)
          _fivetran_deleted: "true if _sdc_deleted_at is not null else false"
          __alias__: accounts
          hash_id: md5(str(id))
          __key_properties__: ["hash_id"]



##################################
#                                #
#       Mappers                  #
#                                #
##################################
  mappers:
  - name: meltano-map-transformer
    pip_url: "git+https://github.com/MeltanoLabs/meltano-map-transform.git"
    executable: meltano-map-transform
    settings:
    - name: stream_maps
      kind: object
    mappings:
    - name: hash_email
      config:
        stream_maps:
          customers:
            id: id
            email:      # drop the PII field from RECORD and SCHEMA messages
            email_domain: email.split('@')[-1]
            email_hash: md5(config['hash_seed'] + email)
            __else__: null
        stream_map_config:
          hash_seed: 01AWZh7A6DzGm6iJZZ2T
    - name: whitelist
      config:
        stream_maps:
          # Whitelist `id` and `description` fields, drop all others
          customers:
            id: id
            description: last_name
            __else__: __NULL__
            __alias__: customers_v2
    - name: add_timestamp
      config:
        stream_maps:
          customers:
            mapping_time: datetime.date.today()
            __alias__: customers_v3
    - name: add_str
      config:
        stream_maps:
          customers:
            client_id: "\"client_123\""
            id: int(id)
            __alias__: customers_v4
            hash_id: md5(str(id))
            __key_properties__: ["hash_id"]
    - name: lower
      config:
        stream_maps:
          customers:
            __alias__: customers_v5
            first_name: first_name.lower() # three different ways of accessing the variable
            last_name: record['last_name'].lower()
            email:  _['email'].upper()
            count_t: str(last_name.count("t")) # need to cast to str because it could be NULL!
            ip_address: __NULL__
    - name: find
      config:
        stream_maps:
          customers:
            __alias__: customers_v6
            first_name: "'found_book' if last_name == 'Book' else 'no_book'"
            id: id
            __else__: __NULL__
    - name: mask
      config:
        stream_maps:
          customers:
            __alias__: customers_v7
            last_name: "config[last_name] if last_name in config else 'no-mask-found'"
            first_name: first_name
            id: id
            __else__: __NULL__
        stream_map_config:
          Book: mask-1
          Tire: mask-2
          Dorian: mask-1
          Suddock: mask-1
          Daws: mask-3
          Maddison: mask-2
          Biernat: mask-4
          Wisden: mask-4
          Loyndon: Mask-2

  # mapper:
  # - name: meltano-map-transformer
  #   pip_url: "git+https://github.com/MeltanoLabs/meltano-map-transform.git"
  #   executable: meltano-map-transform
  #   mappings:
  #   - name: update_ids
  #     config:
  #       stream_maps:
  #         account:
  #           id: int(id)
  #           _fivetran_deleted: "true if _sdc_deleted_at is not null else false"
  #           __alias__: accounts
  #           hash_id: md5(str(id))
  #           __key_properties__: ["hash_id"]
environments:
  - name: dev
  - name: staging
  - name: prod